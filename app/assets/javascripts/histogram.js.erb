
 // var grades = [65.95, 56.98, 78.62, 96.1, 90.3, 72.24, 92.34, 60.00, 81.43, 86.22, 88.33, 9.03,
 // 49.93, 52.34, 53.11, 50.10, 88.88, 55.32, 55.69, 61.68, 70.44, 70.54, 90.0, 71.11, 80.01];

var boundsMap = ['max','ap', 'a' , 'am', 'bp',
                 'b' , 'bm', 'cp' , 'c',
                 'cm', 'd' , 'f'];

var gradesMap = [ 'A+' , 'A+' , 'A' , 'A-',
                  'B+' , 'B'  , 'B-', 'C+',
                  'C'  , 'C-' , 'D', 'F'];

var bounds = [];

function getBounds() {
  inputs = document.getElementsByTagName('input');
  bounds = [];
  for(i = 0; i < inputs.length; i++) {
    bounds.push(parseFloat(inputs[i].value));
  }
}

function setHistogram(j) {
  document.getElementById(boundsMap[j]).innerHTML += "<div class='glyphicon glyphicon-user'></div>";
}

function getLetterGrade(grade) {
  for(j = 0; j < bounds.length; j++) {
    if(grade >= bounds[j]) {
      return gradesMap[j];
    }
  }
}

function placeGrades() {
  getBounds();
  for(i = 0; i < grades.length; i++) {
    for(j = 0; j < bounds.length; j++) {
      if(grades[i] >= bounds[j]) {
        setHistogram(j);
        break;
      }
    }
  }
}

function resetHistogram() {
  for(i = 1; i < boundsMap.length; i++){
    document.getElementById(boundsMap[i]).innerHTML = "";
  }
}


function checkBounds() {
  getBounds();
  var valid = true;
  var message = "";
  for(i = 1; i < bounds.length; i++){

    if(isNaN(bounds[i])){
      message = "Must be a number";
      valid = false;
      break;
    }

    if(bounds[i] > bounds[i-1]){
      valid = false;
      message = "The bounds overlap";
    }
  }

  var element = document.getElementById('error');

  if(valid){
    element.innerHTML = " ";
    resetHistogram();
    placeGrades();
  }else{
    element.innerHTML = "Invalid input! - " + message;
    resetHistogram();
  }
}


document.addEventListener("DOMContentLoaded", function() {
  checkBounds();
});
